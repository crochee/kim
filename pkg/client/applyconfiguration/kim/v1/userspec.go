/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// UserSpecApplyConfiguration represents a declarative configuration of the UserSpec type for use
// with apply.
type UserSpecApplyConfiguration struct {
	Desc                    *string `json:"desc,omitempty"`
	SecretName              *string `json:"secretName,omitempty"`
	ClaimApplyConfiguration `json:",inline"`
}

// UserSpecApplyConfiguration constructs a declarative configuration of the UserSpec type for use with
// apply.
func UserSpec() *UserSpecApplyConfiguration {
	return &UserSpecApplyConfiguration{}
}

// WithDesc sets the Desc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Desc field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithDesc(value string) *UserSpecApplyConfiguration {
	b.Desc = &value
	return b
}

// WithSecretName sets the SecretName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretName field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithSecretName(value string) *UserSpecApplyConfiguration {
	b.SecretName = &value
	return b
}

// WithEmail sets the Email field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Email field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithEmail(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Email = &value
	return b
}

// WithEmailVerified sets the EmailVerified field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EmailVerified field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithEmailVerified(value bool) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.EmailVerified = &value
	return b
}

// WithGivenName sets the GivenName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GivenName field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithGivenName(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.GivenName = &value
	return b
}

// WithFamilyName sets the FamilyName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FamilyName field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithFamilyName(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.FamilyName = &value
	return b
}

// WithMiddleName sets the MiddleName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MiddleName field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithMiddleName(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.MiddleName = &value
	return b
}

// WithNickName sets the NickName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NickName field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithNickName(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.NickName = &value
	return b
}

// WithPreferredUsername sets the PreferredUsername field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PreferredUsername field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithPreferredUsername(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.PreferredUsername = &value
	return b
}

// WithProfile sets the Profile field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Profile field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithProfile(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Profile = &value
	return b
}

// WithPicture sets the Picture field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Picture field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithPicture(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Picture = &value
	return b
}

// WithWebsite sets the Website field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Website field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithWebsite(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Website = &value
	return b
}

// WithGender sets the Gender field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Gender field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithGender(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Gender = &value
	return b
}

// WithBirthdate sets the Birthdate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Birthdate field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithBirthdate(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Birthdate = &value
	return b
}

// WithZoneinfo sets the Zoneinfo field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Zoneinfo field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithZoneinfo(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Zoneinfo = &value
	return b
}

// WithLocale sets the Locale field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Locale field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithLocale(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Locale = &value
	return b
}

// WithPhoneNumber sets the PhoneNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PhoneNumber field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithPhoneNumber(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.PhoneNumber = &value
	return b
}

// WithPhoneNumberVerified sets the PhoneNumberVerified field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PhoneNumberVerified field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithPhoneNumberVerified(value bool) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.PhoneNumberVerified = &value
	return b
}

// WithAddress sets the Address field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Address field is set to the value of the last call.
func (b *UserSpecApplyConfiguration) WithAddress(value string) *UserSpecApplyConfiguration {
	b.ClaimApplyConfiguration.Address = &value
	return b
}
